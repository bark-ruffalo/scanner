---
description: Scanner - project info
globs:
alwaysApply: true
---

# About Scanner

The project is a WIP. The objective of the web app will be to monitor the main launchpads from crypto and traditional VC finance and output all the launches, summarize and evaluate them as potential investments, but also have various filters only to show the launches:

- from certain categories of launchpads (crypto vs traditional);
- from certain launchpads;
- that are highly-rated (using LLM, data gathering and certain evaluation frameworks);
- where the devs haven't sold tokens;
- where there's a certain minimum percentage of tokens or shares offered to the public;
- etc.

## Tech Stack

- [Next.js](https://nextjs.org)
- [Tailwind CSS](https://tailwindcss.com)
- [Drizzle](https://orm.drizzle.team) with PostgreSQL

## Project Structure

Always use the following command after a new chat has started in order to understand the project structure!

`tree -L 4 -a -I 'node_modules|.git|**pycache**|.DS_Store|pytest_cache|.vscode|.next|.cursor|.swc'`

## Full Context

To get the full context of the project, use the following command, then read the generated `codebase.md` file:

`code2prompt -p . -o codebase.md --exclude "**.log,**.tmp,node_modules/**,.next/**,dist/**,build/**,.vercel/**"`

## Data Models

- **Launch**: Represents a launch event from a launchpad
  - Properties: id, launchpad, title, URL, description, summary, analysis, rating, timestamps

## Important Notes (also regarding tool usage)

- After modifying the UI, you may use the Playwright MCP to confirm that the changes are as expected.
- When running in agent mode, after you finish modifying the code, always run the command `biome check --write` to improve code formatting and fix linting errors. Then, if there are still linting errors, fix them manually.
- Always use the full command specified in [Project Structure](#project-structure) to understand the project organization instead of listing the content of various folders one by one.
- Use pnpm instead of npm.
- All database queries must be centralized in the Data Access Layer (DAL) at `src/server/queries.ts`. Never write direct database queries in components or pages.
- The fewer lines of code, the better.
